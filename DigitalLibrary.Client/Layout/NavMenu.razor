@using DigitalLibrary.Client.Services
@inject NavigationManager Navigation
@inject UserServices UserService
@using DigitalLibrary.Shared.DTO
@using Microsoft.AspNetCore.Components.Routing
@using System.IdentityModel.Tokens.Jwt
@inject UserManagementServices UserManagement
@inject UserServices UserServices
@inject UserSubscriptionServices UserSubscriptionServices


<nav class="navbar">
    <ul class="d-flex list-unstyled mb-0">
        <li><NavLink href="/" Match="NavLinkMatch.All">🏠 Trang chủ</NavLink></li>
        <li><NavLink href="/about">📒 Giới thiệu</NavLink></li>
        <li><NavLink @onclick="ShowDocumentFilter">📚 Bộ lọc</NavLink></li>
        @if("admin".Equals(role)){
            <li><NavLink href="/admin">⚙️  Trang quản trị</NavLink></li>
        }
    </ul>

    <ul class="list-unstyled mb-0">
        @if (isLoggedIn)
        {
            <div class="user-menu">
                <img src="@ImageBase64" alt="Avatar" class="avatar" />
                <div class="dropdown-menu">
                    <p class="dropdown-user">👋 Hi! @UserSub.Users.fullname.Trim()</p>
                    <p class="dropdown-plan">💳 Gói: @UserSub.SubscriptionPlans!.nameplan | kết thúc: @(UserSub.SubscriptionPlans!.nameplan.Trim().Equals("Basic") ? "Vĩnh viễn" : @UserSub.exdate.ToString("dd-MM-yyyy")) </p>
                    <NavLink @onclick="() => ShowUserProfile()" >⚙️ Trang cá nhân</NavLink>
                    <NavLink @onclick="() => ShowUserSubsCriptionsManager()">💳 Gói đăng ký</NavLink>
                    <a href="#" @onclick="Logout">🚪 Đăng xuất</a>
                </div>
            </div>
        }
        else
        {
            <li @onclick="ShowLoginForm"><NavLink>🔑 Đăng nhập</NavLink></li>
        }
    </ul>
</nav>

@if (isLoginFormVisible)
{
    <DigitalLibrary.Client.Pages.LoginForm OnClose="CloseLoginForm" />
}

@if (isDocumentsFilterVisible)
{
    <DigitalLibrary.Client.Pages.DocumentsFilter OnClose="CloseDocumentFilter" />
}


@code {
    private bool isLoggedIn = false;
    private bool isLoginFormVisible = false;
    private bool isDocumentsFilterVisible = false;
    private string? ImageBase64;
    private UserSubscriptionsDTO UserSub = new UserSubscriptionsDTO();
    private int userId;
    private string? role = null;

    private void ShowLoginForm()
    {
        isLoginFormVisible = true;
    }

    private void ShowDocumentFilter()
    {
        isDocumentsFilterVisible = true;
    }

    protected override async Task OnInitializedAsync()
    {
        isLoggedIn = await UserService.IsLoggedIn();

        if (isLoggedIn)
        {
            var token = await UserService.GetToken();
            var handler = new JwtSecurityTokenHandler();
            var jwtToken = handler.ReadJwtToken(token);
            userId = int.Parse(jwtToken.Claims.FirstOrDefault(claim => claim.Type == "nameid")!.Value);
            role = jwtToken.Claims.FirstOrDefault(claim => claim.Type == "role")!.Value;


            ImageBase64 = await UserManagement.GetImageAsync(userId);
            UserSub = await UserSubscriptionServices.FindUserSubscriptionByUserId(userId);
        }
    }

    private void CloseLoginForm()
    {
        isLoginFormVisible = false;
    }

    private void CloseDocumentFilter()
    {
        isDocumentsFilterVisible = false;
    }

    private async Task ShowUserSubsCriptionsManager()
    {
        Navigation.NavigateTo($"/subscriptions?userId={userId}");
    }

    private async Task ShowUserProfile()
    {
        Navigation.NavigateTo($"/profile?userId={userId}");
    }

    private async Task Logout()
    {
        await UserService.LogoutAsync();
        isLoggedIn = false;
        Navigation.NavigateTo("/", forceLoad: true);
    }
}

<style>
    .navbar {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: auto;
        min-height: 70px;
        background-color: #faf9f5;
        padding: 10px 20px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
        z-index: 1000;
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        align-items: center;
    }

        .navbar a {
            text-decoration: none;
            color: #000000;
            font-weight: bold;
        }

        .navbar ul {
            display: flex;
            gap: 15px;
            padding: 0;
            list-style: none;
            margin: 0;
            align-items: center;
        }

            /* Main nav links */
            .navbar ul:first-child {
                margin-left: 0;
                flex-wrap: wrap;
                justify-content: center;
            }

            /* User/auth links */
            .navbar ul:last-child {
                margin-right: 0;
            }

    .user-menu {
        position: relative;
        display: inline-block;
    }

    .avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        cursor: pointer;
        object-fit: cover;
        border: 2px solid #ccc;
        transition: border-color 0.3s;
    }

        .avatar:hover {
            border-color: #007bff;
        }

    .dropdown-menu {
        display: none;
        position: absolute;
        right: 0;
        background: white;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
        border-radius: 5px;
        min-width: 250px;
        overflow: hidden;
        z-index: 1000;
    }

    .user-menu:hover .dropdown-menu {
        display: block;
    }

    .dropdown-menu a {
        display: block;
        padding: 10px;
        color: black;
        text-decoration: none;
        transition: background 0.2s;
    }

        .dropdown-menu a:hover {
            background: #f1f1f1;
        }

    .dropdown-user {
        font-weight: bold;
        font-size: 16px;
        padding: 0 10px 10px 10px;
        border-bottom: 1px solid #ddd;
    }

    .dropdown-plan {
        font-size: 14px;
        color: #555;
        padding: 0 10px 10px 10px;
        border-bottom: 1px solid #ddd;
    }

    /* Mobile styles */
    @@media (max-width: 768px) {
        .navbar

    {
        flex-direction: column;
        padding: 10px;
    }

    .navbar ul {
        width: 100%;
        justify-content: center;
        padding: 5px 0;
    }

        .navbar ul:first-child {
            order: 2;
            margin-top: 5px;
        }

        .navbar ul:last-child {
            order: 1;
        }

    .dropdown-menu {
        right: auto;
        left: 50%;
        transform: translateX(-50%);
    }

    }

    /* Small mobile devices */
    @@media (max-width: 480px) {
        .navbar ul

    {
        gap: 8px;
        font-size: 14px;
    }

    .dropdown-menu {
        min-width: 200px;
    }

    }
</style>