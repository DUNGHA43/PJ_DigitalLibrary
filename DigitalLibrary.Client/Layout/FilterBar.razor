@using DigitalLibrary.Client.Services
@using DigitalLibrary.Shared.DTO
@inject AuthorsServices AuthorServices
@inject CategoriesServices CategoryServices
@inject SubjectsServices SubjectsServices
@inject DocumentsServices DocumentsServices
@inject NavigationManager Navigation

<nav class="filter-bar">
    <ul>
        <li class="relative group">
            <NavLink href="/documents">Chủ đề</NavLink>
            <ul class="dropdown-menu1">
                @foreach (var subject in lstSubject)
                {
                    <li><a href="/documents?subject=@subject.id">@subject.subjectname</a></li>
                }
            </ul>
        </li>
        <li class="relative group">
            <NavLink href="/documents">Thể loại</NavLink>
            <ul class="dropdown-menu1">
                @foreach(var category in lstCategories)
                {
                    <li><a href="/documents?category=@category.id">@category.catename</a></li>
                }
            </ul>
        </li>
        <li class="relative group">
            <NavLink href="/documents">Tác giả</NavLink>
            <ul class="dropdown-menu1">
                @foreach (var author in lstAuthor)
                {
                    <li><a href="/documents?author=@author.id">@author.fullname</a></li>
                }
            </ul>
        </li>
        <li class="relative group">
            <NavLink href="/documents">Hạng truy cập</NavLink>
            <ul class="dropdown-menu1">
                <li><a href="/documents?accessLevel=Basic">Basic</a></li>
                <li><a href="/documents?accessLevel=Vip">Vip</a></li>
                <li><a href="/documents?accessLevel=Pro">Pro</a></li>
            </ul>
        </li>
        <li><NavLink href="/documents">Tất cả tài liệu</NavLink></li>
    </ul>


    <div class="search-bar">
        <input type="text" id="searchInput" value="@searchName" @oninput="e => searchName = e.Value.ToString()" placeholder="Nhập tên tài liệu cần tìm kiếm..."/>
        <button type="button" onclick="@Search">🔍</button>
    </div>
</nav>

@code{
    private List<SubjectDTO> lstSubject = new List<SubjectDTO>();
    private List<AuthorsDTO> lstAuthor = new List<AuthorsDTO>();
    private List<CategoriesDTO> lstCategories = new List<CategoriesDTO>();
    private string? searchName = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        lstAuthor = await AuthorServices.GetAuthorsAsync();
        lstCategories = await CategoryServices.GetCategoriesAsync();
        lstSubject = await SubjectsServices.GetSubjectsAsync();
    }

    private void Search(){
        Navigation.NavigateTo($"/documents?searchName={searchName}");
    }
}

<style>
    .filter-bar {
        display: flex;
        justify-content: center;
        background-color: #faf9f5;
        padding: 10px 0;
        border-bottom: 2px solid #ccc;
        height: 80px;
        align-items: center;
    }

        .filter-bar ul {
            list-style: none;
            display: flex;
            gap: 20px;
            padding: 0;
            margin: 0;
        }

        .filter-bar li {
            position: relative;
        }

        .filter-bar a {
            text-decoration: none;
            color: #333;
            font-weight: bold;
            padding: 8px 15px;
            transition: color 0.3s;
        }

            .filter-bar a:hover {
                color: #4e763d;
            }

    .dropdown-menu1 {
        display: grid !important;
        position: fixed;
        left: 0;
        top: 135px;
        width: 100vw;
        height: auto;
        background-color: white;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        border-top: 2px solid #ddd;
        padding: 15px 0;
        justify-content: center;
        gap: 10px 20px;
        opacity: 0;
        visibility: hidden;
        transform: translateY(-20px);
        transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out, visibility 0.3s;
        z-index: 1000;
        grid-template-columns: repeat(5, auto);
    }

    .group:hover .dropdown-menu1 {
        opacity: 1;
        visibility: visible;
        transform: translateY(10px); /* Khi hover, dropdown sẽ trượt xuống */
    }


    .dropdown-menu1 li {
        list-style: none;
    }

    .dropdown-menu1 a {
        display: block;
        padding: 10px 20px;
        font-size: 13px;
        color: #333;
        text-decoration: none;
        transition: background 0.3s;
        white-space: nowrap;
    }

        .dropdown-menu1 a:hover {
            background-color: #f2f2f2;
        }

    .search-bar {
        display: flex;
        align-items: center;
        border: 1px solid #ddd;
        border-radius: 5px;
        overflow: hidden;
        margin-left: 60px;
        width: 500px;
    }

        .search-bar input {
            padding: 10px 15px;
            border: none;
            outline: none;
            flex-grow: 1;
            font-size: 16px;
        }

        .search-bar button {
            background-color: #ffffff;
            color: white;
            border: none;
            padding: 12px 15px;
            cursor: pointer;
        }

            .search-bar button:hover {
                background-color: #bfbfbe;
            }

</style>