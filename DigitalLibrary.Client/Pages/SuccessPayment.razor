@page "/payment-success"
@using DigitalLibrary.Client.Services
@layout NullLayout
@inject NavigationManager Navigation
@inject PaymentServices PaymentServices
@inject ISnackbar Snackbar

<div class="success-container">
    <div class="success-card">
        <div class="success-icon">
            <svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="#4CAF50" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                <polyline points="22 4 12 14.01 9 11.01"></polyline>
            </svg>
        </div>
        <h1 class="success-title">Thanh toán thành công!</h1>
        <p class="success-message">Cảm ơn bạn đã sử dụng dịch vụ của chúng tôi</p>

        <div class="countdown-message">
            Bạn sẽ được chuyển về trang chủ sau <span class="countdown">@countdown</span> giây
        </div>

        <div class="success-details">
            <p>Mọi thắc mắc xin liên hệ:</p>
            <p><a href="dunghasonlla@outlook.com" class="contact-link">dunghasonlla@outlook.com</a></p>
        </div>

        <button @onclick="ReturnToHome" class="return-button">
            Quay lại trang chủ ngay
        </button>
    </div>
</div>

@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "userId")]
    public string UserIdStr { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "planId")]
    public string PlanIdStr { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public string status { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public string orderCode { get; set; }

    private int countdown = 5;
    private Timer countdownTimer;
    private bool isAutoRedirecting = true;

    protected override async Task OnInitializedAsync()
    {
        countdownTimer = new Timer(CountdownCallback, null, 1000, 1000);
        await base.OnInitializedAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (int.TryParse(UserIdStr, out int userId) && int.TryParse(PlanIdStr, out int planId) && status != null && orderCode != null)
        {
            var result = await PaymentServices.AddHistoryAndUpdatePlanAsync(userId, planId);
            if (!result)
            {
                Snackbar.Add("Lỗi khi cập nhật gói", Severity.Error);
            }
        }
        else
        {
            Snackbar.Add("Thiếu thông tin userId hoặc planId", Severity.Error);
        }
    }

    private void CountdownCallback(object state)
    {
        if (countdown > 0)
        {
            countdown--;
            InvokeAsync(StateHasChanged);
        }
        else if (isAutoRedirecting)
        {
            InvokeAsync(ReturnToHome);
        }
    }

    private void ReturnToHome()
    {
        isAutoRedirecting = false;
        Navigation.NavigateTo("/");
    }

    public void Dispose()
    {
        countdownTimer?.Dispose();
    }
}
<style>
    body{
        padding-top: 0 !important;
    }
    .success-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        background-color: #f5f7fa;
        padding: 20px;
    }

    .success-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        padding: 40px;
        max-width: 500px;
        width: 100%;
        text-align: center;
        transition: transform 0.3s ease;
    }

        .success-card:hover {
            transform: translateY(-5px);
        }

    .success-icon {
        margin-bottom: 20px;
        animation: bounce 1s ease;
    }

    .success-title {
        color: #4CAF50;
        font-size: 28px;
        font-weight: 600;
        margin-bottom: 15px;
    }

    .success-message {
        color: #666;
        font-size: 18px;
        margin-bottom: 25px;
    }

    .success-details {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 15px;
        margin: 25px 0;
    }

    .contact-link {
        color: #2196F3;
        text-decoration: none;
        font-weight: 500;
    }

        .contact-link:hover {
            text-decoration: underline;
        }

    .return-button {
        background-color: #4CAF50;
        color: white;
        border: none;
        padding: 12px 24px;
        border-radius: 6px;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        width: 100%;
        margin-top: 20px;
    }

        .return-button:hover {
            background-color: #45a049;
        }

    .countdown-message {
        margin-bottom: 15px;
        color: #666;
        font-size: 16px;
    }

    .countdown {
        font-weight: bold;
        color: #4CAF50;
    }

    @@keyframes bounce {
        0%, 20%, 50%, 80%, 100% {
            transform: translateY(0);
        }

        40% {
            transform: translateY(-20px);
        }

        60% {
            transform: translateY(-10px);
        }
    }
</style>