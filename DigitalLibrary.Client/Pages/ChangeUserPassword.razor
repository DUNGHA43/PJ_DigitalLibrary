@using DigitalLibrary.Client.Services
@layout ReadDocumentLayout
@using DigitalLibrary.Shared.DTO
@inject IJSRuntime JS
@inject UserManagementServices UserManagement
@inject ISnackbar Snackbar

<!-- Modal Change Password -->
<div class="modal fade" id="ChangeUserPass" tabindex="-1" aria-labelledby="passwordModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content password-modal">
            <div class="modal-header">
                <h3 class="modal-title" id="passwordModalLabel">
                    <i class="fas fa-key me-2"></i>Thay đổi mật khẩu
                </h3>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="password-form">
                    <div class="form-group mb-4">
                        <label class="form-label">
                            <i class="fas fa-lock me-2"></i>Mật khẩu hiện tại
                        </label>
                        <div class="input-group">
                            <input type="password"
                                   class="form-control password-input"
                                   @bind="currentPassword"
                                   placeholder="Nhập mật khẩu hiện tại">
                            <span class="input-group-text toggle-password" onclick="togglePassword(this)">
                                <i class="fas fa-eye"></i>
                            </span>
                        </div>
                    </div>

                    <div class="form-group mb-4">
                        <label class="form-label">
                            <i class="fas fa-key me-2"></i>Mật khẩu mới
                        </label>
                        <div class="input-group">
                            <input type="password"
                                   class="form-control password-input"
                                   @bind="newPassword"
                                   placeholder="Nhập mật khẩu mới">
                            <span class="input-group-text toggle-password" onclick="togglePassword(this)">
                                <i class="fas fa-eye"></i>
                            </span>
                        </div>
                        <div class="password-strength mt-2">
                            <div class="strength-bar"></div>
                            <small class="strength-text">Độ mạnh mật khẩu: <span>Yếu</span></small>
                        </div>
                    </div>

                    <div class="form-group mb-4">
                        <label class="form-label">
                            <i class="fas fa-check-circle me-2"></i>Xác nhận mật khẩu
                        </label>
                        <div class="input-group">
                            <input type="password"
                                   class="form-control password-input"
                                   @bind="confirmPassword"
                                   placeholder="Nhập lại mật khẩu mới">
                            <span class="input-group-text toggle-password" onclick="togglePassword(this)">
                                <i class="fas fa-eye"></i>
                            </span>
                        </div>
                        <div class="password-match mt-2">
                            <small class="text-danger" style="display:none;">
                                <i class="fas fa-times-circle me-1"></i>Mật khẩu không khớp
                            </small>
                            <small class="text-success" style="display:none;">
                                <i class="fas fa-check-circle me-1"></i>Mật khẩu khớp
                            </small>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button"
                        class="btn btn-outline-secondary cancel-btn"
                        data-bs-dismiss="modal">
                    <i class="fas fa-times me-1"></i>Hủy
                </button>
                <button type="button"
                        class="btn btn-primary save-btn"
                        @onclick="SavePassWordAsync"
                        data-bs-dismiss="modal">
                    <i class="fas fa-save me-1"></i>Lưu thay đổi
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public UsersDTO? User { get; set; } = new UsersDTO();
    [Parameter] public EventCallback<string> OnUserChangePass { get; set; }

    private string currentPassword = string.Empty;
    private string newPassword = string.Empty;
    private string confirmPassword = string.Empty;

    private IBrowserFile? imgFileEdit;
    private UsersDTO editPassUser = new UsersDTO();

    protected override async Task OnParametersSetAsync()
    {
        if (User != null)
        {
            editPassUser = new UsersDTO
                {
                    id = User.id,
                    username = User.username,
                    password = User.password,
                    email = User.email,
                    fullname = User.fullname,
                    gender = User.gender,
                    birthday = User.birthday,
                    phonenumber = User.phonenumber,
                    identification = User.identification,
                    address = User.address,
                    status = User.status,
                    imageurl = User.imageurl
                };
        }
    }

    private async Task SavePassWordAsync()
    {
        if(!currentPassword.Equals(editPassUser.password.Trim())){
            Snackbar.Add("❌ Mật khẩu hiện tại không đúng!", Severity.Error);
        }
        else if (!newPassword.Equals(confirmPassword))
        {
            Snackbar.Add("❌ Mật khẩu mới không khớp!", Severity.Error);
        }
        else
        {
            editPassUser.password = newPassword;
            var result = await UserManagement.UpdateUserAsync(editPassUser, imgFileEdit);
            if (result)
            {
                await OnUserChangePass.InvokeAsync("✅ Thay đổi mật khẩu thành công!");
            }
            else
            {
                await OnUserChangePass.InvokeAsync("❌ Thay đổi mật khẩu thất bại!");
            }
        }
        
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("eval", @"
                window.togglePassword = function(element) {
                    const input = element.closest('.input-group').querySelector('.password-input');
                    const icon = element.querySelector('i');
                    if (input.type === 'password') {
                        input.type = 'text';
                        icon.classList.replace('fa-eye', 'fa-eye-slash');
                    } else {
                        input.type = 'password';
                        icon.classList.replace('fa-eye-slash', 'fa-eye');
                    }
                };

                // Password strength indicator
                document.querySelectorAll('.password-input').forEach(input => {
                    input.addEventListener('input', function() {
                        if (this.id.includes('newPassword')) {
                            const strengthBar = this.closest('.form-group').querySelector('.strength-bar');
                            const strengthText = this.closest('.form-group').querySelector('.strength-text span');
                            const strength = calculatePasswordStrength(this.value);

                            strengthBar.style.width = strength.percentage + '%';
                            strengthBar.style.backgroundColor = strength.color;
                            strengthText.textContent = strength.text;
                            strengthText.style.color = strength.color;
                        }

                        // Check password match
                        if (this.id.includes('newPassword') || this.id.includes('confirmPassword')) {
                            const newPass = document.getElementById('newPassword')?.value;
                            const confirmPass = document.getElementById('confirmPassword')?.value;

                            if (newPass && confirmPass) {
                                const matchError = document.querySelector('.password-match .text-danger');
                                const matchSuccess = document.querySelector('.password-match .text-success');

                                if (newPass === confirmPass) {
                                    matchError.style.display = 'none';
                                    matchSuccess.style.display = 'block';
                                } else {
                                    matchError.style.display = 'block';
                                    matchSuccess.style.display = 'none';
                                }
                            }
                        }
                    });
                });

                function calculatePasswordStrength(password) {
                    let strength = 0;
                    if (password.length > 0) strength += 20;
                    if (password.length >= 8) strength += 20;
                    if (/[A-Z]/.test(password)) strength += 20;
                    if (/[0-9]/.test(password)) strength += 20;
                    if (/[^A-Za-z0-9]/.test(password)) strength += 20;

                    let result = { percentage: strength, color: '#dc3545', text: 'Rất yếu' };

                    if (strength >= 60) {
                        result.color = '#ffc107';
                        result.text = 'Trung bình';
                    }
                    if (strength >= 80) {
                        result.color = '#28a745';
                        result.text = 'Mạnh';
                    }
                    if (strength >= 100) {
                        result.color = '#17a2b8';
                        result.text = 'Rất mạnh';
                    }

                    return result;
                }
            ");
        }
    }
}

<style>
    .password-modal {
        border-radius: 12px;
        border: none;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    }

    .modal-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border-radius: 10px 10px 0 0 !important;
        border-bottom: none;
        padding: 1.5rem;
    }

    .modal-title {
        font-weight: 600;
        display: flex;
        align-items: center;
    }

    .btn-close {
        filter: invert(1);
        opacity: 0.8;
    }

    .modal-body {
        padding: 2rem;
    }

    .form-label {
        font-weight: 500;
        color: #495057;
        display: flex;
        align-items: center;
        margin-bottom: 0.5rem;
    }

    .password-input {
        padding: 0.75rem 1rem;
        border-radius: 8px;
        border: 1px solid #ced4da;
        transition: all 0.3s;
    }

        .password-input:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.25rem rgba(102, 126, 234, 0.25);
        }

    .input-group-text {
        background-color: #f8f9fa;
        cursor: pointer;
        transition: all 0.3s;
    }

        .input-group-text:hover {
            background-color: #e9ecef;
        }

    .toggle-password {
        border-radius: 0 8px 8px 0 !important;
    }

    .password-strength {
        width: 100%;
    }

    .strength-bar {
        height: 4px;
        background: #e9ecef;
        border-radius: 2px;
        margin-bottom: 0.25rem;
        transition: all 0.3s;
    }

    .strength-text {
        font-size: 0.8rem;
        color: #6c757d;
    }

        .strength-text span {
            font-weight: 600;
        }

    .modal-footer {
        border-top: none;
        padding: 1.5rem;
        justify-content: flex-end;
    }

    .cancel-btn {
        padding: 0.5rem 1.25rem;
        border-radius: 8px;
        font-weight: 500;
    }

    .save-btn {
        padding: 0.5rem 1.25rem;
        border-radius: 8px;
        font-weight: 500;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
    }

        .save-btn:hover {
            opacity: 0.9;
            transform: translateY(-1px);
        }

    .password-match small {
        display: flex;
        align-items: center;
    }
</style>