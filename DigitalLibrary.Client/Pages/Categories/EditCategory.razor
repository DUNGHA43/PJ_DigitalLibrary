@using DigitalLibrary.Client.Services
@using DigitalLibrary.Shared.DTO
@using MudBlazor
@inject IJSRuntime JS
@inject CategoriesServices Categories
@inject ISnackbar Snackbar


<div class="modal fade" id="EditCategory" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">Sửa Thể Loại</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">Tên thể loại:</label>
                    <input class="form-control" @bind="editCate.catename" />
                </div>

                <!-- Checkbox chọn trạng thái -->
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="statusCheck" @bind="editCate.status">
                    <label class="form-check-label" for="statusCheck">
                        Kích Hoạt
                    </label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" @onclick="SaveCategory" data-bs-dismiss="modal">Lưu</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public CategoriesDTO? Category { get; set; } = new CategoriesDTO();
    [Parameter] public EventCallback<string> OnCategoryEdited { get; set; }

    private CategoriesDTO editCate = new CategoriesDTO();

    protected override void OnParametersSet()
    {
        if (Category != null)
        {
            // Copy dữ liệu từ EditCate để tránh thay đổi trực tiếp dữ liệu nguồn
            editCate = new CategoriesDTO
                {
                    id = Category.id,
                    catename = Category.catename,
                    status = Category.status,
                    createdate = Category.createdate
                };
        }
    }

    private async Task SaveCategory()
    {
        var result = await Categories.EditCategoryAsync(editCate);
        if (result)
        {
            await OnCategoryEdited.InvokeAsync("✅ Sửa thể loại thành công!");
        }
        else
        {
            await OnCategoryEdited.InvokeAsync("❌ Xóa thể loại thất bại!");
        }
    }
}
<style>
    .modal-footer button {
        width: 100px !important;
    }
</style>