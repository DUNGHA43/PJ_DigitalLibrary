@page "/documents/read"
@layout ReadDocumentLayout
@using DigitalLibrary.Client.Services
@using DigitalLibrary.Shared.DTO
@using System.IdentityModel.Tokens.Jwt
@using MudBlazor
@using ExtensionMethod
@inject DocumentsServices Documents
@inject UserServices _userServices
@inject UserSubscriptionServices _userSubscriptionServices
@inject IJSRuntime JS
@inject NavigationManager Navigation
@inject ISnackbar Snackbar
@inject UserPermissionServices _userPermissionServices

<div class="document-container">
    <div class="text-center mt-3 button-pdfview">
        <button class="btn btn-secondary px-4" @onclick="GoBack">
            ⬅️ Quay lại
        </button>
        <button class="btn btn-warning px-4" @onclick="() => DowloadDocument(documentId)">
            📥 Tải xuống
        </button>
    </div>

    @if (!string.IsNullOrEmpty(PdfUrl))
    {
        <iframe id="pdfViewer" class="pdf-viewer"></iframe>
    }
    else
    {
        <p class="text-danger text-center">Đang tải tài liệu...</p>
    }
</div>

@code {
    [Parameter, SupplyParameterFromQuery] public int documentId { get; set; }
    private string? PdfUrl;
    private bool IsBase64 = false;
    private UserSubscriptionsDTO userSubscription = new UserSubscriptionsDTO();
    private DocumentsDTO documentExisting = new DocumentsDTO();
    private List<UserPermissionsDTO> lstUserPermission = new List<UserPermissionsDTO>();
    private int userId;

    protected override async Task OnInitializedAsync() { 
        lstUserPermission = await _userPermissionServices.GetUserPermissionAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        PdfUrl = await Documents.GetPdfBlobUrlAsync(documentId);
        if (!string.IsNullOrEmpty(PdfUrl))
        {
            IsBase64 = PdfUrl.StartsWith("data:application/pdf;base64,");
        }

        var token = await _userServices.GetToken();
        var handler = new JwtSecurityTokenHandler();
        var jwtToken = handler.ReadJwtToken(token);
        userId = int.Parse(jwtToken.Claims.FirstOrDefault(claim => claim.Type == "nameid")!.Value);

        documentExisting = await Documents.FindDocumentById(documentId);
        userSubscription = await _userSubscriptionServices.FindUserSubscriptionByUserId(userId);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!string.IsNullOrEmpty(PdfUrl))
        {
            if (IsBase64)
            {
                await JS.InvokeVoidAsync("loadPdfBase64", PdfUrl, "pdfViewer");
            }
            else
            {
                await JS.InvokeVoidAsync("loadPdfUrl", PdfUrl, "pdfViewer");
            }
        }
    }

    private async Task DowloadDocument(int documentId)
    {
        try
        {

            if (!userSubscription.SubscriptionPlans.nameplan.Trim().Equals("Basic"))
            {
                if (userSubscription.exdate < DateTime.UtcNow)
                {
                    Snackbar.Add("Gói đăng ký của bạn đã hết hạn", Severity.Warning);
                }
            }
            bool canAccess = userSubscription.CanAccess(documentExisting.accesslevel.Trim()!);
            if (!canAccess)
            {
                Snackbar.Add($"Bạn cần gói {documentExisting.accesslevel} để tải tài liệu này", Severity.Error);
            }
            else
            {
                if(lstUserPermission.FirstOrDefault(up => up.userid == userId)!.candowload == false 
                & documentExisting.accesslevel.Trim().Equals("Basic"))
                {
                    var pdfDataUrl = await Documents.GetPdfBlobUrlAsync(documentId);

                    if (string.IsNullOrEmpty(pdfDataUrl))
                    {
                        return;
                    }

                    await JS.InvokeVoidAsync("downloadPdf",
                        pdfDataUrl,
                        $"{documentExisting.title}.pdf");
                }
                else
                {
                    Snackbar.Add("HIện tại tài liệu này đang bị cấm tải!", Severity.Warning);
                }
            }
        }
        catch
        {
            Snackbar.Add("Lỗi khi tải tài liệu", Severity.Error);
        }
    }

    private async Task GoBack()
    {
        Navigation.NavigateTo("/documents", replace: true);
    }
}

<style>
    .document-container {
        border: 1px solid #f2f2f2;
        border-radius: 8px;
        padding: 15px;
        background: #e9e9e9;
        box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
    }

    .button-pdfview {
        margin-bottom: 15px;
        display: flex;
        justify-content: center;
        gap: 12px; /* Khoảng cách giữa 2 nút */
    }

        .button-pdfview button {
            /* Kích thước nhỏ gọn */
            width: 180px !important;
            padding: 5px 12px;
            /* Kiểu chữ */
            font-size: 0.85rem;
            font-weight: 500;
            letter-spacing: 0.5px;
            /* Hình dáng */
            border-radius: 20px; /* Bo tròn nhiều hơn */
            border: none;
            /* Hiệu ứng */
            transition: all 0.2s ease;
            cursor: pointer;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        /* Nút "Quay lại" */
        .button-pdfview .btn-back {
            background: #f0f0f0;
            color: #555;
        }

        /* Nút "Download" */
        .button-pdfview .btn-download {
            background: #4CAF50; /* Màu xanh lá */
            color: white;
        }

        /* Hiệu ứng hover */
        .button-pdfview button:hover {
            transform: translateY(-1px);
            box-shadow: 0 3px 6px rgba(0,0,0,0.15);
        }

        .button-pdfview .btn-back:hover {
            background: #e0e0e0;
        }

        .button-pdfview .btn-download:hover {
            background: #3e8e41;
        }

    .pdf-viewer {
        width: 90%;
        min-height: 700px;
        border: none;
        margin: 0 auto;
    }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
    }

    .btn-warning {
        background-color: #ffc107;
        border-color: #ffc107;
        font-weight: 500;
    }
</style>
